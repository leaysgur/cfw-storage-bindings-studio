#!/usr/bin/env node
"use strict";import{parseArgs as g}from"node:util";import{access as f,writeFile as u}from"node:fs/promises";import{createReadStream as c}from"node:fs";import{createServer as h}from"node:http";import{join as o,extname as w,dirname as y}from"node:path";import{fileURLToPath as T}from"node:url";import{unstable_dev as b}from"wrangler";const l={default:"application/octet-stream",html:"text/html; charset=UTF-8",css:"text/css",js:"application/javascript"},p=y(T(import.meta.url)),r=p.endsWith("/bin")?o(process.cwd(),"./build"):p;let s;(async()=>{const{values:t}=g({args:process.argv.slice(2),options:{"studio-port":{type:"string",default:"3000"},config:{short:"c",type:"string",default:"./wrangler.toml"},"persist-to":{type:"string",default:".wrangler/state"},remote:{type:"boolean",default:!1}}});s=await b(o(r,"worker.js"),{...t.remote?{local:!1}:{local:!0,persistTo:t["persist-to"]},config:t.config,experimental:{disableExperimentalWarning:!0}});const n=`http://${s.address}:${s.port}`;await u(o(r,"settings.json"),JSON.stringify({bridgeOrigin:n})),h(async(m,e)=>{const i=o(r,String(m.url));if(!i.startsWith(r))return e.writeHead(403).end();const a=w(i).substring(1).toLowerCase();if(!a||a==="html")return e.writeHead(200,{"Content-Type":l.html}),c(o(r,"index.html")).pipe(e);if(!await f(i).then(()=>!0).catch(()=>!1))return e.writeHead(404).end();const d=l[a]??l.default;return e.writeHead(200,{"Content-Type":d}),c(i).pipe(e)}).listen(t["studio-port"]),console.log(`GUI is running on http://127.0.0.1:${t["studio-port"]}`),t.remote?console.log(`  with bridge(mode=remote) running on ${n}`):(console.log(`  with bridge(mode=local) running on ${n}`),console.log(`    persistTo: ${t["persist-to"]}`)),console.log(`    config: ${t.config}`)})().catch(async t=>{console.error(t),await s?.stop(),process.exit(1)});
