var S=Object.defineProperty;var u=(t,n)=>S(t,"name",{value:n,configurable:!0});import{n as A,ar as N,l as m}from"./runtime.DGYXNv_o.js";function I(t,n,r){if(t==null)return n(void 0),r&&r(void 0),A;const e=t.subscribe(n,r);return e.unsubscribe?()=>e.unsubscribe():e}u(I,"subscribe_to_store");const h=[];function k(t,n){return{subscribe:T(t,n).subscribe}}u(k,"readable");function T(t,n=A){let r=null;const e=new Set;function s(o){if(N(t,o)&&(t=o,r)){const i=!h.length;for(const c of e)c[1](),h.push(c,t);if(i){for(let c=0;c<h.length;c+=2)h[c][0](h[c+1]);h.length=0}}}u(s,"set");function a(o){s(o(t))}u(a,"update");function y(o,i=A){const c=[o,i];return e.add(c),e.size===1&&(r=n(s,a)||A),o(t),()=>{e.delete(c),e.size===0&&r&&(r(),r=null)}}return u(y,"subscribe"),{set:s,update:a,subscribe:y}}u(T,"writable");function L(t,n,r){const e=!Array.isArray(t),s=e?[t]:t;if(!s.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const a=n.length<2;return k(r,(y,o)=>{let i=!1;const c=[];let l=0,g=A;const p=u(()=>{if(l)return;g();const b=n(e?c[0]:c,y,o);a?y(b):g=typeof b=="function"?b:A},"sync"),f=s.map((b,d)=>I(b,w=>{c[d]=w,l&=~(1<<d),i&&p()},()=>{l|=1<<d}));return i=!0,p(),u(function(){m(f),g(),i=!1},"stop")})}u(L,"derived");function Y(t){let n;return I(t,r=>n=r)(),n}u(Y,"get");function z(t){const n=new DataView(t);let r="";for(let e=0;e<t.byteLength;e++)r+=String.fromCharCode(n.getUint8(e));return _(r)}u(z,"encode64");function C(t){const n=U(t),r=new ArrayBuffer(n.length),e=new DataView(r);for(let s=0;s<r.byteLength;s++)e.setUint8(s,n.charCodeAt(s));return r}u(C,"decode64");const E="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function U(t){t.length%4===0&&(t=t.replace(/==?$/,""));let n="",r=0,e=0;for(let s=0;s<t.length;s++)r<<=6,r|=E.indexOf(t[s]),e+=6,e===24&&(n+=String.fromCharCode((r&16711680)>>16),n+=String.fromCharCode((r&65280)>>8),n+=String.fromCharCode(r&255),r=e=0);return e===12?(r>>=4,n+=String.fromCharCode(r)):e===18&&(r>>=2,n+=String.fromCharCode((r&65280)>>8),n+=String.fromCharCode(r&255)),n}u(U,"asciiToBinary");function _(t){let n="";for(let r=0;r<t.length;r+=3){const e=[void 0,void 0,void 0,void 0];e[0]=t.charCodeAt(r)>>2,e[1]=(t.charCodeAt(r)&3)<<4,t.length>r+1&&(e[1]|=t.charCodeAt(r+1)>>4,e[2]=(t.charCodeAt(r+1)&15)<<2),t.length>r+2&&(e[2]|=t.charCodeAt(r+2)>>6,e[3]=t.charCodeAt(r+2)&63);for(let s=0;s<e.length;s++)typeof e[s]>"u"?n+="=":n+=E[e[s]]}return n}u(_,"binaryToAscii");const B=-1,O=-2,j=-3,D=-4,F=-5,V=-6;function H(t,n){return R(JSON.parse(t),n)}u(H,"parse");function R(t,n){if(typeof t=="number")return s(t,!0);if(!Array.isArray(t)||t.length===0)throw new Error("Invalid input");const r=t,e=Array(r.length);function s(a,y=!1){if(a===B)return;if(a===j)return NaN;if(a===D)return 1/0;if(a===F)return-1/0;if(a===V)return-0;if(y)throw new Error("Invalid input");if(a in e)return e[a];const o=r[a];if(!o||typeof o!="object")e[a]=o;else if(Array.isArray(o))if(typeof o[0]=="string"){const i=o[0],c=n==null?void 0:n[i];if(c)return e[a]=c(s(o[1]));switch(i){case"Date":e[a]=new Date(o[1]);break;case"Set":const l=new Set;e[a]=l;for(let f=1;f<o.length;f+=1)l.add(s(o[f]));break;case"Map":const g=new Map;e[a]=g;for(let f=1;f<o.length;f+=2)g.set(s(o[f]),s(o[f+1]));break;case"RegExp":e[a]=new RegExp(o[1],o[2]);break;case"Object":e[a]=Object(o[1]);break;case"BigInt":e[a]=BigInt(o[1]);break;case"null":const p=Object.create(null);e[a]=p;for(let f=1;f<o.length;f+=2)p[o[f]]=s(o[f+1]);break;case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":{const f=globalThis[i],b=o[1],d=C(b),w=new f(d);e[a]=w;break}case"ArrayBuffer":{const f=o[1],b=C(f);e[a]=b;break}default:throw new Error(`Unknown type ${i}`)}}else{const i=new Array(o.length);e[a]=i;for(let c=0;c<o.length;c+=1){const l=o[c];l!==O&&(i[c]=s(l))}}else{const i={};e[a]=i;for(const c in o){const l=o[c];i[c]=s(l)}}return e[a]}return u(s,"hydrate"),s(0)}u(R,"unflatten");export{O as H,j as N,D as P,B as U,F as a,V as b,L as d,z as e,Y as g,H as p,k as r,I as s,R as u,T as w};
