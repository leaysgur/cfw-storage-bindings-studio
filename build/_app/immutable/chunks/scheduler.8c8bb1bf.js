var w=Object.defineProperty;var e=(t,n)=>w(t,"name",{value:n,configurable:!0});function j(){}e(j,"noop");function E(t,n){for(const o in n)t[o]=n[o];return t}e(E,"assign");function A(t){return!!t&&(typeof t=="object"||typeof t=="function")&&typeof t.then=="function"}e(A,"is_promise");function v(t){return t()}e(v,"run");function B(){return Object.create(null)}e(B,"blank_object");function C(t){t.forEach(v)}e(C,"run_all");function F(t){return typeof t=="function"}e(F,"is_function");function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}e(P,"safe_not_equal");function S(t){return Object.keys(t).length===0}e(S,"is_empty");function m(t,...n){if(t==null){for(const r of n)r(void 0);return j}const o=t.subscribe(...n);return o.unsubscribe?()=>o.unsubscribe():o}e(m,"subscribe");function U(t){let n;return m(t,o=>n=o)(),n}e(U,"get_store_value");function G(t,n,o){t.$$.on_destroy.push(m(n,o))}e(G,"component_subscribe");function H(t,n,o,r){if(t){const c=x(t,n,o,r);return t[0](c)}}e(H,"create_slot");function x(t,n,o,r){return t[1]&&r?E(o.ctx.slice(),t[1](r(n))):o.ctx}e(x,"get_slot_context");function I(t,n,o,r){if(t[2]&&r){const c=t[2](r(o));if(n.dirty===void 0)return c;if(typeof c=="object"){const l=[],d=Math.max(n.dirty.length,c.length);for(let i=0;i<d;i+=1)l[i]=n.dirty[i]|c[i];return l}return n.dirty|c}return n.dirty}e(I,"get_slot_changes");function J(t,n,o,r,c,l){if(c){const d=x(n,o,r,l);t.p(d,c)}}e(J,"update_slot_base");function K(t){if(t.ctx.length>32){const n=[],o=t.ctx.length/32;for(let r=0;r<o;r++)n[r]=-1;return n}return-1}e(K,"get_all_dirty_from_scope");let _;function h(t){_=t}e(h,"set_current_component");function f(){if(!_)throw new Error("Function called outside component initialization");return _}e(f,"get_current_component");function L(t){f().$$.on_mount.push(t)}e(L,"onMount");function N(t){f().$$.after_update.push(t)}e(N,"afterUpdate");function Q(t){f().$$.on_destroy.push(t)}e(Q,"onDestroy");function R(t,n){return f().$$.context.set(t,n),n}e(R,"setContext");function T(t){return f().$$.context.get(t)}e(T,"getContext");const a=[],b=[];let u=[];const y=[],k=Promise.resolve();let g=!1;function O(){g||(g=!0,k.then(z))}e(O,"schedule_update");function V(){return O(),k}e(V,"tick");function q(t){u.push(t)}e(q,"add_render_callback");const p=new Set;let s=0;function z(){if(s!==0)return;const t=_;do{try{for(;s<a.length;){const n=a[s];s++,h(n),D(n.$$)}}catch(n){throw a.length=0,s=0,n}for(h(null),a.length=0,s=0;b.length;)b.pop()();for(let n=0;n<u.length;n+=1){const o=u[n];p.has(o)||(p.add(o),o())}u.length=0}while(a.length);for(;y.length;)y.pop()();g=!1,p.clear(),h(t)}e(z,"flush");function D(t){if(t.fragment!==null){t.update(),C(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}e(D,"update");function W(t){const n=[],o=[];u.forEach(r=>t.indexOf(r)===-1?n.push(r):o.push(r)),o.forEach(r=>r()),u=n}e(W,"flush_render_callbacks");export{_ as A,v as B,a as C,O as D,N as a,b,h as c,H as d,K as e,z as f,f as g,I as h,A as i,Q as j,R as k,G as l,T as m,j as n,L as o,m as p,U as q,C as r,P as s,V as t,J as u,F as v,B as w,S as x,q as y,W as z};
