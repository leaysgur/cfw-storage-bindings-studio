var m=Object.defineProperty;var r=(e,n)=>m(e,"name",{value:n,configurable:!0});import{E as l,s as q,O as x,R as z,U as A}from"./scheduler.868b4e5c.js";const f=[];function E(e,n){return{subscribe:B(e,n).subscribe}}r(E,"readable");function B(e,n=l){let i;const o=new Set;function c(t){if(q(e,t)&&(e=t,i)){const u=!f.length;for(const s of o)s[1](),f.push(s,e);if(u){for(let s=0;s<f.length;s+=2)f[s][0](f[s+1]);f.length=0}}}r(c,"set");function b(t){c(t(e))}r(b,"update");function d(t,u=l){const s=[t,u];return o.add(s),o.size===1&&(i=n(c,b)||l),t(e),()=>{o.delete(s),o.size===0&&i&&(i(),i=null)}}return r(d,"subscribe"),{set:c,update:b,subscribe:d}}r(B,"writable");function S(e,n,i){const o=!Array.isArray(e),c=o?[e]:e;if(!c.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const b=n.length<2;return E(i,(d,t)=>{let u=!1;const s=[];let p=0,g=l;const y=r(()=>{if(p)return;g();const a=n(o?s[0]:s,d,t);b?d(a):g=A(a)?a:l},"sync"),_=c.map((a,h)=>x(a,w=>{s[h]=w,p&=~(1<<h),u&&y()},()=>{p|=1<<h}));return u=!0,y(),r(function(){z(_),g(),u=!1},"stop")})}r(S,"derived");export{S as d,E as r,B as w};
